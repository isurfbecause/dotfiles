# Start window number at one
set -g base-index 1
setw -g mouse on
set -s escape-time 0
set -g history-limit 200000

set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Turn off distracting border highlight.
set-option -ga pane-active-border-style bg=default,fg=default

# Fixes large amount of output being cut off
# set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# Start tmux in bash
set-option -g default-command bash
set-option -g status-position bottom

# Remove kill pan prompt
bind-key x kill-pane

# Vim style, higlight follow cursor
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi i send-keys -X cancel

# Search back to last prompt (mnemonic: "[b]ack").
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward " ~ "\; send-keys -X next-word

# Stay in copy mode
bind-key -Tcopy-mode-vi y send -X copy-selection-no-clear 
bind-key -Tcopy-mode-vi Enter send -X copy-selection-no-clear 

# Don't exit copy mode on double or triple click.
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Yank to pbcopy in visual mode
if-shell 'uname | grep --quiet Darwin' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"'

# Shot git branch in status bar
set -g status-right "#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)"
set -g status-right-length 20

# Resize pane with Alt (prefix with repeat)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -r k resize-pane -U 2 \; display-message "Resize up"
bind-key -r j resize-pane -D 2 \; display-message "Resize down"

# Use vim keybindings to resize splits
bind-key -r h if-shell "$is_vim" 'send-keys ,0'  'resize-pane -R 5'
bind-key -r l if-shell "$is_vim" 'send-keys ,9'  'resize-pane -L 5'
bind-key -r k if-shell "$is_vim" 'send-keys ,8'  'resize-pane -U 5'
bind-key -r j if-shell "$is_vim" 'send-keys ,7'  'resize-pane -D 5'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# End christoomey/vim-tmux-navigator

# Use prefix C-l to clear the visible scrollback lines
bind C-l send-keys 'C-l'

# Reload tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Smooth scrolling
set -g @scroll-speed-num-lines-per-scroll 1

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
